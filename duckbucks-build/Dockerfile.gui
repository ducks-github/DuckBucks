FROM ubuntu:20.04

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install basic build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc-9 \
    g++-9 \
    cmake \
    git \
    libssl-dev \
    libboost-all-dev \
    libdb++-dev \
    libdb-dev \
    libdb5.3-dev \
    libdb5.3++-dev \
    libevent-dev \
    qt5-default \
    qttools5-dev \
    qttools5-dev-tools \
    libqt5gui5 \
    libqt5core5a \
    libqt5dbus5 \
    qt5-qmake \
    libminiupnpc-dev \
    libqrencode-dev \
    wget \
    fuse \
    libfuse2 \
    linux-libc-dev \
    && rm -rf /var/lib/apt/lists/*

# Set GCC 9 as default
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 60 \
    --slave /usr/bin/g++ g++ /usr/bin/g++-9 \
    --slave /usr/bin/gcov gcov /usr/bin/gcov-9

WORKDIR /app

# Clone the repository
RUN git clone https://github.com/ducks-github/duckbucks.git .

# Fix permissions for leveldb build scripts
RUN chmod +x /app/src/leveldb/build_detect_platform

# Build leveldb first
RUN cd src/leveldb && \
    make clean && \
    make libleveldb.a libmemenv.a && \
    cd ../..

# Create build directory
RUN mkdir -p build

# Build the Qt GUI
RUN cd build && \
    qmake \
    "USE_UPNP=1" \
    "USE_QRCODE=1" \
    "RELEASE=1" \
    "QMAKE_CC=gcc-9" \
    "QMAKE_CXX=g++-9" \
    "QMAKE_CXXFLAGS+=-Wno-deprecated-copy" \
    "QMAKE_CXXFLAGS+=-fPIC" \
    "QMAKE_CXXFLAGS+=-isystem /usr/include/x86_64-linux-gnu" \
    "QMAKE_CXXFLAGS+=-isystem /usr/include" \
    "BOOST_INCLUDE_PATH=/usr/include" \
    "BOOST_LIB_PATH=/usr/lib/x86_64-linux-gnu" \
    "BDB_INCLUDE_PATH=/usr/include" \
    "BDB_LIB_PATH=/usr/lib/x86_64-linux-gnu" \
    "../bitcoin-qt.pro" && \
    make -j$(nproc)

# Create AppDir structure
RUN mkdir -p AppDir/usr/bin \
    && cp build/duckbucks-qt AppDir/usr/bin/

# Create desktop file
RUN echo "[Desktop Entry]\nName=DuckBucks\nExec=duckbucks-qt\nType=Application\n" > AppDir/duckbucks.desktop

# Download and prepare linuxdeploy
RUN wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage \
    && wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage \
    && chmod +x linuxdeploy*.AppImage

# Package into an AppImage
RUN VERSION=${VERSION} ./linuxdeploy-x86_64.AppImage --appdir AppDir --plugin qt --output appimage

CMD ["./DuckBucks-${VERSION}-x86_64.AppImage"]
