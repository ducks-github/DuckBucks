FROM ubuntu:20.04

ENV DEBIAN_FRONTEND=noninteractive
ENV VERSION=v02

# Install basic build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    libssl-dev \
    libboost-all-dev \
    libobs-dev \
    libevent-dev \
    qt5-default \
    qttools5-dev \
    qttools5-dev-tools \
    libqt5gui5 \
    libdb++-dev \
    libminiupnpc-dev \
    libqrencode-dev \
    wget \
    fuse \
    libfuse2 \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Clone the repository with the correct URL
RUN git clone https://github.com/ducks-github/duckbucks.git .

# Debug: List contents to verify .pro file location
RUN ls -la /app

# Fix permissions for leveldb build scripts
RUN chmod +x /app/src/leveldb/build_detect_platform

# Apply patch to fix bignum.h
RUN sed -i 's/class CBigNum[[:space:]]*:[[:space:]]*public BIGNUM[[:space:]]*{/class CBigNum { private: BIGNUM bn; public:/g' /app/src/bignum.h
RUN sed -i 's/BN_init(this)/BN_init(\&bn)/g' /app/src/bignum.h
RUN sed -i 's/BN_copy(this,\([[:space:]]*[&]b\))/BN_copy(\&bn,\1)/g' /app/src/bignum.h
RUN sed -i 's/BN_clear_free(this)/BN_clear_free(\&bn)/g' /app/src/bignum.h
RUN sed -i 's/BN_set_word(this,\([[:space:]]*\)/BN_set_word(\&bn,\1/g' /app/src/bignum.h
RUN sed -i 's/BN_add(this,\([[:space:]]*\)/BN_add(\&bn,\1/g' /app/src/bignum.h
RUN sed -i 's/BN_sub(this,\([[:space:]]*\)/BN_sub(\&bn,\1/g' /app/src/bignum.h
RUN sed -i 's/BN_mul(this,\([[:space:]]*\)/BN_mul(\&bn,\1/g' /app/src/bignum.h
RUN sed -i 's/BN_div(this,\([[:space:]]*\)/BN_div(\&bn,\1/g' /app/src/bignum.h
RUN sed -i 's/BN_mod(this,\([[:space:]]*\)/BN_mod(\&bn,\1/g' /app/src/bignum.h
RUN sed -i 's/BN_lshift(this,\([[:space:]]*\)/BN_lshift(\&bn,\1/g' /app/src/bignum.h
RUN sed -i 's/BN_rshift(this,\([[:space:]]*\)/BN_rshift(\&bn,\1/g' /app/src/bignum.h
RUN sed -i 's/BN_cmp(this,\([[:space:]]*[&]\)/BN_cmp(\&bn,\1/g' /app/src/bignum.h
RUN sed -i 's/BN_is_negative(this)/BN_is_negative(\&bn)/g' /app/src/bignum.h
RUN sed -i 's/BN_num_bytes(this)/BN_num_bytes(\&bn)/g' /app/src/bignum.h
RUN sed -i 's/BN_get_word(this)/BN_get_word(\&bn)/g' /app/src/bignum.h
RUN sed -i 's/BN_set_negative(this,\([[:space:]]*\)/BN_set_negative(\&bn,\1/g' /app/src/bignum.h
RUN sed -i 's/BN_mpi2bn(\([^,]*\),\s*\([^,]*\),\s*)this/BN_mpi2bn(\1,\2,\&bn)/g' /app/src/bignum.h
RUN sed -i 's/BN_bn2mpi(this,\([[:space:]]*\)/BN_bn2mpi(\&bn,\1/g' /app/src/bignum.h

# Build the Qt GUI (using the correct .pro file)
RUN qmake "USE_UPNP=1" "USE_QRCODE=1" "RELEASE=1" /app/bitcoin-qt.pro
RUN make -j$(nproc)

# Download linuxdeploy and make it executable
RUN wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage \
    && wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage \
    && chmod +x linuxdeploy*.AppImage

# Create AppDir structure
RUN mkdir -p AppDir/usr/bin \
    && cp duckbucks-qt AppDir/usr/bin

# Create desktop file
RUN echo "[Desktop Entry]\nName=DuckBucks\nExec=duckbucks-qt\nType=Application\n" > AppDir/duckbucks.desktop

# Package into an AppImage
RUN ./linuxdeploy-x86_64.AppImage --appdir AppDir --plugin qt --output appimage

CMD ["./DuckBucks.AppImage"]
